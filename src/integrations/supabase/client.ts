
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { SUPABASE_CONFIG, validateSupabaseConfig } from '@/config/supabase';

// Lazy supabase client creation
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

const getSupabaseClient = () => {
  if (!supabaseInstance) {
    validateSupabaseConfig();
    supabaseInstance = createClient<Database>(
      SUPABASE_CONFIG.url, 
      SUPABASE_CONFIG.anonKey,
      {
        auth: {
          storageKey: 'capittal-auth'
        }
      }
    );
  }
  return supabaseInstance;
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = new Proxy({} as ReturnType<typeof createClient<Database>>, {
  get(target, prop) {
    const client = getSupabaseClient();
    const value = (client as any)[prop];
    return typeof value === 'function' ? value.bind(client) : value;
  }
});
